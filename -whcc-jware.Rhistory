non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_patho[,2:6]<-round(EF_patho[,2:6],2)
## EF with CardioBoost pathogenic prediction excluding the ones seen in training data
EF_patho_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_patho_novel$case_freq_gene<-ifelse(is.na(EF_patho_novel$case_freq_gene),0,EF_patho_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_patho_novel$gnomAD_freq_gene<-ifelse(is.na(EF_patho_novel$gnomAD_freq_gene),0,EF_patho_novel$gnomAD_freq_gene)
EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_patho_novel$EF<-ef(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,predict="pathogenic")
EF_patho_novel$ci_lower<-ef_ci_lower(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
EF_patho_novel$ci_upper<-ef_ci_upper(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_patho_novel[,2:6]<-round(EF_patho_novel[,2:6],2)
## EF with CardioBoost benign prediction
EF_benign=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1 ),sum)
EF_benign$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign$case_freq_gene<-ifelse(is.na(EF_benign$case_freq_gene),0,EF_benign$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1 ),sum)
EF_benign$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign$case_freq_gene<-ifelse(is.na(EF_benign$case_freq_gene),0,EF_benign$case_freq_gene)
EF_benign[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign$EF<-ef(EF_benign$case_freq_gene,EF_benign$gnomAD_freq_gene,predict="benign")
EF_benign$ci_lower<-ef_ci_lower(EF_benign$case_freq_gene,EF_benign$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign$ci_upper<-ef_ci_upper(EF_benign$case_freq_gene,EF_benign$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
#EF_benign$ci_upper<-ifelse(EF_benign$ci_upper>1,1,EF_benign$ci_upper)
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign[,2:6]<-round(EF_benign[,2:6],2)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
EF_compare<-data.frame(gene=gene_list,EF_raw=EF_raw$EF,EF_raw_ci=paste(EF_raw$ci_lower,EF_raw$ci_upper,sep=","),
EF_patho_novel=EF_patho_novel$EF,EF_patho_novel_ci=paste(EF_patho_novel$ci_lower,EF_patho_novel$ci_upper,sep=","),
EF_benign_novel=EF_benign_novel$EF,
EF_benign_novel_ci=paste(EF_benign_novel$ci_lower,EF_benign_novel$ci_upper,sep=","))
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_compare<-EF_compare[order(EF_compare$EF_raw,decreasing = TRUE),]
subset(EF_compare,is.element(gene,sarc_gene))
View(EF_benign_novel)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$gnomAD_freq_gene
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1  & isTrain==FALSE),sum)
case_freq_gene
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
View(EF_benign_novel)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("./")
source("../../src/ef_ci.R")
load("../../../data/cardiomyopathy/cohort_variant_count.RData")
load("../../../data/cardiomyopathy/prediction/cm_prediction.RData")
patient_number<-5665
gnomAD_number<-138632
## EF raw with priorization information
#have the case freq and control freq for each missense variant seen in SHaRe
gene_list<-unique(variant_count$gene)
EF_raw=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=variant_count,sum)
EF_raw$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=cm_prediction,sum)
EF_raw$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_raw[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_raw[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_raw$EF<-ef(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,predict="raw")
EF_raw$ci_lower<-ef_ci_lower(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict = "raw")
EF_raw$ci_upper<-ef_ci_upper(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_raw[,2:6]<-round(EF_raw[,2:6],2)
## EF with CardioBoost Pathogenic predictions
EF_patho=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity>=0.9),sum)
EF_patho$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_patho$case_freq_gene<-ifelse(is.na(EF_patho$case_freq_gene),0,EF_patho$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity>=0.9),sum)
EF_patho$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_patho$gnomAD_freq_gene<-ifelse(is.na(EF_patho$gnomAD_freq_gene),0,EF_patho$gnomAD_freq_gene)
EF_patho[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_patho[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_patho$EF<-ef(EF_patho$case_freq_gene,EF_patho$gnomAD_freq_gene,predict="pathogenic")
EF_patho$ci_lower<-ef_ci_lower(EF_patho$case_freq_gene,EF_patho$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
EF_patho$ci_upper<-ef_ci_upper(EF_patho$case_freq_gene,EF_patho$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_patho[,2:6]<-round(EF_patho[,2:6],2)
## EF with CardioBoost pathogenic prediction excluding the ones seen in training data
EF_patho_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_patho_novel$case_freq_gene<-ifelse(is.na(EF_patho_novel$case_freq_gene),0,EF_patho_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_patho_novel$gnomAD_freq_gene<-ifelse(is.na(EF_patho_novel$gnomAD_freq_gene),0,EF_patho_novel$gnomAD_freq_gene)
EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_patho_novel$EF<-ef(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,predict="pathogenic")
EF_patho_novel$ci_lower<-ef_ci_lower(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
EF_patho_novel$ci_upper<-ef_ci_upper(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_patho_novel[,2:6]<-round(EF_patho_novel[,2:6],2)
## EF with CardioBoost benign prediction
EF_benign=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1 ),sum)
EF_benign$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign$case_freq_gene<-ifelse(is.na(EF_benign$case_freq_gene),0,EF_benign$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1 ),sum)
EF_benign$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign$case_freq_gene<-ifelse(is.na(EF_benign$case_freq_gene),0,EF_benign$case_freq_gene)
EF_benign[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign$EF<-ef(EF_benign$case_freq_gene,EF_benign$gnomAD_freq_gene,predict="benign")
EF_benign$ci_lower<-ef_ci_lower(EF_benign$case_freq_gene,EF_benign$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign$ci_upper<-ef_ci_upper(EF_benign$case_freq_gene,EF_benign$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
#EF_benign$ci_upper<-ifelse(EF_benign$ci_upper>1,1,EF_benign$ci_upper)
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign[,2:6]<-round(EF_benign[,2:6],2)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
EF_compare<-data.frame(gene=gene_list,EF_raw=EF_raw$EF,EF_raw_ci=paste(EF_raw$ci_lower,EF_raw$ci_upper,sep=","),
EF_patho_novel=EF_patho_novel$EF,EF_patho_novel_ci=paste(EF_patho_novel$ci_lower,EF_patho_novel$ci_upper,sep=","),
EF_benign_novel=EF_benign_novel$EF,
EF_benign_novel_ci=paste(EF_benign_novel$ci_lower,EF_benign_novel$ci_upper,sep=","))
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_compare<-EF_compare[order(EF_compare$EF_raw,decreasing = TRUE),]
subset(EF_compare,is.element(gene,sarc_gene))
View(EF_compare)
subset(EF_compare,is.element(gene,sarc_gene))
subset(EF_compare,is.element(gene,sarc_gene))
View(EF_benign_novel)
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
EF_benign_novel$case_freq_gene
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
View(EF_benign_novel)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,pathogenicity<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$gnomAD_freq_gene<-ifelse(is.na(EF_benign_novel$gnomAD_freq_gene),0,EF_benign_novel$gnomAD_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
View(EF_benign_novel)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("./")
source("../../src/ef_ci.R")
load("../../../data/cardiomyopathy/cohort_variant_count.RData")
load("../../../data/cardiomyopathy/prediction/cm_prediction.RData")
patient_number<-5665
gnomAD_number<-138632
gene_list<-unique(variant_count$gene)
gene_list
EF_raw=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=variant_count,sum)
EF_raw$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=cm_prediction,sum)
EF_raw$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_raw[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_raw[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_raw$EF<-ef(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,predict="raw")
EF_raw$ci_lower<-ef_ci_lower(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw")
EF_raw$ci_upper<-ef_ci_upper(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_raw[,2:6]<-round(EF_raw[,2:6],2)
## EF with REVEL pathogenic prediction excluding the ones seen in training data
EF_patho_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,REVEL>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_patho_novel$case_freq_gene<-ifelse(is.na(EF_patho_novel$case_freq_gene),0,EF_patho_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,REVEL>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_patho_novel$gnomAD_freq_gene<-ifelse(is.na(EF_patho_novel$gnomAD_freq_gene),0,EF_patho_novel$gnomAD_freq_gene)
EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_patho_novel$EF<-ef(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,predict="pathogenic")
EF_patho_novel$ci_lower<-ef_ci_lower(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
EF_patho_novel$ci_upper<-ef_ci_upper(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_patho_novel[,2:6]<-round(EF_patho_novel[,2:6],2)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,REVEL<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,REVEL<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$gnomAD_freq_gene<-ifelse(is.na(EF_benign_novel$gnomAD_freq_gene),0,EF_benign_novel$gnomAD_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
EF_REVEL<-data.frame(gene=gene_list,EF_raw=EF_raw$EF,EF_raw_ci=paste("(",EF_raw$ci_lower,EF_raw$ci_upper,")"),
EF_patho_novel=EF_patho_novel$EF,EF_patho_novel_ci=paste("(",EF_patho_novel$ci_lower,EF_patho_novel$ci_upper,")"),
EF_benign_novel=EF_benign_novel$EF,
EF_benign_novel_ci=paste("(",EF_benign_novel$ci_lower,EF_benign_novel$ci_upper,")"))
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_REVEL<-EF_REVEL[order(EF_REVEL$EF_raw,decreasing = TRUE),]
EF_REVEL<-subset(EF_REVEL,is.element(gene,sarc_gene))
EF_REVEL
View(EF_REVEL)
gene_list<-unique(variant_count$gene)
gene_list
EF_raw=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=variant_count,sum)
EF_raw$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=cm_prediction,sum)
EF_raw$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_raw[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_raw[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_raw$EF<-ef(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,predict="raw")
EF_raw$ci_lower<-ef_ci_lower(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw" )
EF_raw$ci_upper<-ef_ci_upper(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_raw[,2:6]<-round(EF_raw[,2:6],2)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,MCAP<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,MCAP<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
EF_mcap<-data.frame(gene=gene_list,EF_raw=EF_raw$EF,EF_raw_ci=paste("(",EF_raw$ci_lower,EF_raw$ci_upper,")"),
EF_patho_novel=EF_patho_novel$EF,EF_patho_novel_ci=paste("(",EF_patho_novel$ci_lower,EF_patho_novel$ci_upper,")"),
EF_benign_novel=EF_benign_novel$EF,
EF_benign_novel_ci=paste("(",EF_benign_novel$ci_lower,EF_benign_novel$ci_upper,")"))
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_mcap<-EF_mcap[order(EF_mcap$EF_raw,decreasing = TRUE),]
EF_mcap<-subset(EF_mcap,is.element(gene,sarc_gene))
EF_mcap
gene_list<-unique(variant_count$gene)
gene_list
EF_raw=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=variant_count,sum)
EF_raw$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=cm_prediction,sum)
EF_raw$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_raw[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_raw[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_raw$EF<-ef(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,predict="raw")
EF_raw$ci_lower<-ef_ci_lower(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw" )
EF_raw$ci_upper<-ef_ci_upper(EF_raw$case_freq_gene,EF_raw$gnomAD_freq_gene,patient_number,gnomAD_number,predict="raw")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_raw[,2:6]<-round(EF_raw[,2:6],2)
## EF with MCAP pathogenic prediction excluding the ones seen in training data
EF_patho_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,MCAP>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_patho_novel$case_freq_gene<-ifelse(is.na(EF_patho_novel$case_freq_gene),0,EF_patho_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,MCAP>=0.9 & isTrain==FALSE),sum)
EF_patho_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_patho_novel$gnomAD_freq_gene<-ifelse(is.na(EF_patho_novel$gnomAD_freq_gene),0,EF_patho_novel$gnomAD_freq_gene)
EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_patho_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_patho_novel$EF<-ef(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,predict="pathogenic")
EF_patho_novel$ci_lower<-ef_ci_lower(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
EF_patho_novel$ci_upper<-ef_ci_upper(EF_patho_novel$case_freq_gene,EF_patho_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="pathogenic")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_patho_novel[,2:6]<-round(EF_patho_novel[,2:6],2)
## EF with CardioBoost benign prediction excluding the ones seen in the training data
EF_benign_novel=data.frame(gene=gene_list)
case_freq_gene<-aggregate(case_freq~gene,data=subset(variant_count,MCAP<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$case_freq_gene<-case_freq_gene[match(gene_list,case_freq_gene$gene),]$case_freq
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
gnomAD_freq_gene<-aggregate(gnomAD_AF~gene,data=subset(cm_prediction,MCAP<=0.1  & isTrain==FALSE),sum)
EF_benign_novel$gnomAD_freq_gene<-gnomAD_freq_gene[match(gene_list,gnomAD_freq_gene$gene),]$gnomAD_AF
EF_benign_novel$case_freq_gene<-ifelse(is.na(EF_benign_novel$case_freq_gene),0,EF_benign_novel$case_freq_gene)
EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")]=t(apply(EF_benign_novel[,c("case_freq_gene","gnomAD_freq_gene")],1,function(x){check_input(x[1],x[2])}))
EF_benign_novel$EF<-ef(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,predict="benign")
EF_benign_novel$ci_lower<-ef_ci_lower(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
EF_benign_novel$ci_upper<-ef_ci_upper(EF_benign_novel$case_freq_gene,EF_benign_novel$gnomAD_freq_gene,patient_number,gnomAD_number,predict="benign")
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_benign_novel[,2:6]<-round(EF_benign_novel[,2:6],2)
EF_mcap<-data.frame(gene=gene_list,EF_raw=EF_raw$EF,EF_raw_ci=paste("(",EF_raw$ci_lower,EF_raw$ci_upper,")"),
EF_patho_novel=EF_patho_novel$EF,EF_patho_novel_ci=paste("(",EF_patho_novel$ci_lower,EF_patho_novel$ci_upper,")"),
EF_benign_novel=EF_benign_novel$EF,
EF_benign_novel_ci=paste("(",EF_benign_novel$ci_lower,EF_benign_novel$ci_upper,")"))
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
EF_mcap<-EF_mcap[order(EF_mcap$EF_raw,decreasing = TRUE),]
EF_mcap<-subset(EF_mcap,is.element(gene,sarc_gene))
EF_mcap
View(EF_mcap)
knitr::opts_chunk$set(echo = TRUE)
library(survminer)
library(survival)
set.seed(1)
rm(list=ls())
sarc_gene<-c("ACTC1","MYBPC3","MYH7","MYL2","MYL3","TNNI3","TNNT2","TPM1")
non_sarc_gene<-c("GLA","LAMP2","LMNA","PRKAG2","TTR")
load("../../../data/cardiomyopathy/2018Q1_outcome_genetics_v2.RData")
genotype<-subset(genotype,select=c(age,Composite_Overall,pathogenicity,MCAP,REVEL,SarcStatus,Gen_Mutation,Gen_Gene_Name,Patient_ID))
table(genotype$SarcStatus)
outcome_sarc<-subset(genotype,is.element(SarcStatus,c("SARC(+)","SARC(U)","SARC(-)","SHaRe-Genotype Negative")))
outcome_sarc$SarcStatus<-ifelse(outcome_sarc$SarcStatus=="SARC(+)","SHaRe-Pathogenic",ifelse(outcome_sarc$SarcStatus=="SARC(-)","SHaRe-Benign",ifelse(outcome_sarc$SarcStatus=="SARC(U)","SHaRe-VUS","Genotype Negative")))
table(outcome_sarc$SarcStatus)
outcome_sarc$CardioBoost<-ifelse(outcome_sarc$pathogenicity<=0.1,"CardioBoost-Benign",ifelse(outcome_sarc$pathogenicity>0.9,"CardioBoost-Pathogenic",ifelse(!is.na(outcome_sarc$pathogenicity),"CardioBoost-Unclassified","Genotype Negative")))
outcome_sarc[which(is.na(outcome_sarc$pathogenicity)),]$CardioBoost<-"Genotype Negative"
table(outcome_sarc$CardioBoost)
outcome_sarc$MCAP<-ifelse(outcome_sarc$MCAP<=0.1,"MCAP-Benign",ifelse(outcome_sarc$MCAP>=0.9,"MCAP-Pathogenic",ifelse(!is.na(outcome_sarc$MCAP),"MCAP-Unclassified","Genotype-Negative")))
outcome_sarc[which(is.na(outcome_sarc$MCAP)),]$MCAP<-"Genotype Negative"
table(outcome_sarc$MCAP)
outcome_sarc$REVEL<-ifelse(outcome_sarc$REVEL<=0.1,"REVEL-Benign",ifelse(outcome_sarc$REVEL>=0.9,"REVEL-Pathogenic","REVEL-Unclassified"))
outcome_sarc[which(is.na(outcome_sarc$REVEL)),]$REVEL<-"Genotype Negative"
table(outcome_sarc$REVEL)
colnames(outcome_sarc)[6]<-"SHaRe"
#CardioBoost
data1<-outcome_sarc
colnames(data1)[ncol(data1)]<-"Class"
#SHaRe
data2<-outcome_sarc
data2$CardioBoost<-data2$SHaRe
colnames(data2)[ncol(data2)]<-"Class"
#MCAP
data3<-outcome_sarc
data3$CardioBoost<-data3$MCAP
colnames(data3)[ncol(data3)]<-"Class"
#REVEL
data4<-outcome_sarc
data4$CardioBoost<-data4$REVEL
colnames(data4)[ncol(data4)]<-"Class"
View(genotype)
unique(sapply(genotype$Patient_ID,function(x){strsplit(x,"_")[1][[1]]}))
unique(sapply(as.character(genotype$Patient_ID),function(x){strsplit(x,"_")[[1]][1]}))
library(readr)
genetics<-read_csv("/Users/xzhang13/Desktop/OneDrive/OneDrive - Imperial College London/Project1/CM/TestData/SHARE/2018Q1/CSV/SHaRe_Genetics.csv")
View(genetics)
genetics<-subset(genetics,GeneticStatus!="G(0)")
mis_genetics<-subset(genetics,!is.na(Gen_Mutation_Amino_Acid) & Gen_Mutation_Type=="Substitution")
library(stringr)
k<-sapply(str_extract_all(mis_genetics$Gen_Mutation,"\\([^()]+\\)"),function(x){ifelse(identical(as.character(x),character(0)),NA,x[[1]])})
k <- substring(k, 2, nchar(k)-1)
mis_genetics$hgvsc<-k
load("/Users/xzhang13/Desktop/OneDrive/OneDrive - Imperial College London/Project1/CM/predict/cm_all_rare_prediction_full.RData")
cm_prediction<-cm_all_rare_imputed
cm_prediction$key1<-paste(cm_prediction$gene,cm_prediction$cDot,sep=":")
cm_prediction$key2<-paste(cm_prediction$gene,cm_prediction$pDot,sep=":")
mis_genetics$key1<-paste(mis_genetics$Gen_Gene_Name,mis_genetics$hgvsc,sep=":")
mis_genetics$key2<-paste(mis_genetics$Gen_Gene_Name,mis_genetics$Gen_Mutation_Amino_Acid,sep=":")
intersect_key1<-intersect(cm_prediction$key1,mis_genetics$key1)
cm_sub<-subset(cm_prediction,is.element(key1,intersect_key1))
mis_genetics$key1_match<-is.element(mis_genetics$key1,intersect_key1)
mis_genetics_sub1<-subset(mis_genetics,key1_match==TRUE)
key1_outcome<-subset(merge(cm_sub,mis_genetics_sub1,by="key1",all.y=TRUE),select=-c(key1,key2.x,key2.y,key1_match))
mis_genetics_sub2<-subset(mis_genetics,key1_match==FALSE)
intersect_key2<-intersect(cm_prediction$key2,mis_genetics_sub2$key2)
cm_sub2<-subset(cm_prediction,is.element(key2,intersect_key2))
mis_genetics_sub2$key2_match<-is.element(mis_genetics_sub2$key2,intersect_key2)
exclude_hint<-cm_sub2$key1[which(duplicated(match(cm_sub2$key2,mis_genetics_sub2$key2))==TRUE)]
exclude_key1<-c("TNNT2:c.450C>G","MYBPC3:c.3640T>A","MYH7:c.4377G>C","MYH7:c.1491G>C","MYH7:c.438G>C","MYH7:c.209C>G")
cm_sub2<-subset(cm_sub2,!is.element(key1,exclude_key1))
mis_genetics_sub2<-subset(mis_genetics_sub2,key2_match==TRUE)
key2_outcome<-subset(merge(cm_sub2,mis_genetics_sub2,by="key2",all.y=TRUE),select=-c(key2,key1.x,key1.y,key1_match,key2_match))
outcome<-rbind(key1_outcome,key2_outcome)
outcome<-outcome[which(!is.na(outcome$pathogenicity)),]
table(outcome$HGVSc)
library(plyr)
outcome$gene_cDot
variant_count<-count(outcome,c("gene","cDot","pathogenicity","gnomAD_AF","isTrain","MCAP","REVEL"))
variant_count$case_freq<-variant_count$freq/patient_number
library(readr)
genetics<-read_csv("/Users/xzhang13/Desktop/OneDrive/OneDrive - Imperial College London/Project1/CM/TestData/SHARE/2018Q1/CSV/SHaRe_Genetics.csv")
genetics<-subset(genetics,GeneticStatus!="G(0)")
patient_number<-length(unique(genetics$Patient_ID))
mis_genetics<-subset(genetics,!is.na(Gen_Mutation_Amino_Acid) & Gen_Mutation_Type=="Substitution")
unique(sapply(as.character(genetics$Patient_ID),function(x){strsplit(x,"_")[[1]][1]}))
length(unique(sapply(as.character(genetics$Patient_ID),function(x){strsplit(x,"_")[[1]][1]})))
library("optparse")
rm(list=ls())
require(dplyr)
option_list = list(
make_option(c("-p", "--pathogenic"), type="character", default=NULL,
help="with clinical significance", metavar="character"),
make_option(c("-t","--transcript"),type="character",default=NULL,help="gene-canonical transcript file",metavar="character"),
make_option(c("-v","--vep"),type="character",default=NULL,help="variants list with vep annotations",metavar="character"),
make_option(c("-o", "--out"), type="character", default="out.txt",
help="output file name [default= %default]", metavar="character")
);
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);
p_file="icc_cm_variants.txt"
vep_file="icc_cm_variants_vep.tsv"
gene_info_file="./cardiomyopathy/cm_gene.txt"
output_file="icc_cm_variants_vep_canon.txt"
patho<-read.table(p_file,header=TRUE,sep="\t")
setwd("~/Desktop/collect_features_test")
setwd("~/Desktop/collect_features_test")
patho<-read.table(p_file,header=TRUE,sep="\t")
colnames(patho)<-tolower(colnames(patho))
patho[,"variation"]=paste(patho[,"chrom"],patho[,"pos"],patho[,"ref"],patho[,"alt"],sep = "_")
gene_info<-read.table(gene_info_file,header=TRUE,sep="\t")
vep_variants<-read.table(vep_file,header=FALSE,comment.char = "#",stringsAsFactors = FALSE)
colnames(vep_variants)<-c("Uploaded_variation","Location",	"Allele","Gene","Feature","Feature_type",
"Consequence",	"cDNA_position",	"CDS_position",	"Protein_position",	"Amino_acids",
"Codons","Existing_variation","ALLELE_NUM","IMPACT","DISTANCE",	"STRAND",	"FLAGS",	"MINIMISED",	"SYMBOL",
"SYMBOL_SOURCE",	"HGNC_ID",	"HGVSc",	"HGVSp",	"HGVS_OFFSET")
vep_can<-NULL
for (i in 1:nrow(gene_info)){
gene_info_row<-gene_info[i,]
gene_v<-subset(vep_variants,Feature==as.character(gene_info_row$gene_canon_transcript))
vep_can<-rbind(vep_can,gene_v)
}
l=strsplit(as.character(vep_can$Uploaded_variation),"_")
df=data.frame(t(sapply(l,c)))
chr=df[,1]
pos=df[,2]
ref=df[,3]
alt=df[,4]
vep_selected=data.frame(variation=vep_can$Uploaded_variation,chrom=chr,pos=pos,ref=ref,alt=alt,gene=vep_can$SYMBOL,HGVSc=vep_can$HGVSc,HGVSp=vep_can$HGVSp)
df=merge(vep_selected,patho[,c("variation","pathogenic")],by="variation")[,-1]
frameshift=as.integer(grepl('Met1\\?',df$HGVSp))
df=df[frameshift!=1,]
intron = as.integer(grepl("-",df$HGVSc))
df=df[intron!=1,]
stop=as.integer(grepl('Ter',df$HGVSp))
df=df[stop!=1,]
intron = as.integer(grepl("\\+",df$HGVSc))
df=df[intron!=1,]
ns = as.integer(grepl("%",df$HGVSp))
df=df[ns!=1,]
delin=as.integer(grepl("del",df$HGVSc))
df=df[delin!=1,]
stopcodon=as.integer(grepl("\\*",df$HGVSc))
df=df[stopcodon!=1,]
inv=as.integer(grepl("inv*",df$HGVSc))
df=df[inv!=1,]
print("yes")
print(ref)
print(alt)
View(df)
patho<-read.table(p_file,header=TRUE,sep="\t")
colnames(patho)<-tolower(colnames(patho))
patho[,"variation"]=paste(patho[,"chrom"],patho[,"pos"],patho[,"ref"],patho[,"alt"],sep = "_")
gene_info<-read.table(gene_info_file,header=TRUE,sep="\t")
View(patho)
View(vep_can)
View(patho)
View(vep_selected)
View(vep_can)
View(vep_selected)
View(vep_can)
